// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/google/uuid"
	"github.com/it512/loong/hg/internal/ent/hg"
	"github.com/it512/loong/hg/internal/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	hgFields := schema.Hg{}.Fields()
	_ = hgFields
	// hgDescHumanCode is the schema descriptor for human_code field.
	hgDescHumanCode := hgFields[1].Descriptor()
	// hg.HumanCodeValidator is a validator for the "human_code" field. It is called by the builders before save.
	hg.HumanCodeValidator = func() func(string) error {
		validators := hgDescHumanCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(human_code string) error {
			for _, fn := range fns {
				if err := fn(human_code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// hgDescHumanName is the schema descriptor for human_name field.
	hgDescHumanName := hgFields[2].Descriptor()
	// hg.HumanNameValidator is a validator for the "human_name" field. It is called by the builders before save.
	hg.HumanNameValidator = func() func(string) error {
		validators := hgDescHumanName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(human_name string) error {
			for _, fn := range fns {
				if err := fn(human_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// hgDescGroupCode is the schema descriptor for group_code field.
	hgDescGroupCode := hgFields[3].Descriptor()
	// hg.GroupCodeValidator is a validator for the "group_code" field. It is called by the builders before save.
	hg.GroupCodeValidator = func() func(string) error {
		validators := hgDescGroupCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(group_code string) error {
			for _, fn := range fns {
				if err := fn(group_code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// hgDescGroupName is the schema descriptor for group_name field.
	hgDescGroupName := hgFields[4].Descriptor()
	// hg.GroupNameValidator is a validator for the "group_name" field. It is called by the builders before save.
	hg.GroupNameValidator = func() func(string) error {
		validators := hgDescGroupName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(group_name string) error {
			for _, fn := range fns {
				if err := fn(group_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// hgDescStatus is the schema descriptor for status field.
	hgDescStatus := hgFields[5].Descriptor()
	// hg.DefaultStatus holds the default value on creation for the status field.
	hg.DefaultStatus = hgDescStatus.Default.(int)
	// hgDescID is the schema descriptor for id field.
	hgDescID := hgFields[0].Descriptor()
	// hg.DefaultID holds the default value on creation for the id field.
	hg.DefaultID = hgDescID.Default.(func() uuid.UUID)
}
