// Code generated by ent, DO NOT EDIT.

package hg

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the hg type in the database.
	Label = "hg"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHumanCode holds the string denoting the human_code field in the database.
	FieldHumanCode = "human_code"
	// FieldHumanName holds the string denoting the human_name field in the database.
	FieldHumanName = "human_name"
	// FieldGroupCode holds the string denoting the group_code field in the database.
	FieldGroupCode = "group_code"
	// FieldGroupName holds the string denoting the group_name field in the database.
	FieldGroupName = "group_name"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the hg in the database.
	Table = "id_hg"
)

// Columns holds all SQL columns for hg fields.
var Columns = []string{
	FieldID,
	FieldHumanCode,
	FieldHumanName,
	FieldGroupCode,
	FieldGroupName,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// HumanCodeValidator is a validator for the "human_code" field. It is called by the builders before save.
	HumanCodeValidator func(string) error
	// HumanNameValidator is a validator for the "human_name" field. It is called by the builders before save.
	HumanNameValidator func(string) error
	// GroupCodeValidator is a validator for the "group_code" field. It is called by the builders before save.
	GroupCodeValidator func(string) error
	// GroupNameValidator is a validator for the "group_name" field. It is called by the builders before save.
	GroupNameValidator func(string) error
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the Hg queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHumanCode orders the results by the human_code field.
func ByHumanCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHumanCode, opts...).ToFunc()
}

// ByHumanName orders the results by the human_name field.
func ByHumanName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHumanName, opts...).ToFunc()
}

// ByGroupCode orders the results by the group_code field.
func ByGroupCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGroupCode, opts...).ToFunc()
}

// ByGroupName orders the results by the group_name field.
func ByGroupName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGroupName, opts...).ToFunc()
}

// ByStatus orders the results by the status field.
func ByStatus(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStatus, opts...).ToFunc()
}
