// Code generated by ent, DO NOT EDIT.

package hg

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/it512/loong/hg/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldID, id))
}

// HumanCode applies equality check predicate on the "human_code" field. It's identical to HumanCodeEQ.
func HumanCode(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldHumanCode, v))
}

// HumanName applies equality check predicate on the "human_name" field. It's identical to HumanNameEQ.
func HumanName(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldHumanName, v))
}

// GroupCode applies equality check predicate on the "group_code" field. It's identical to GroupCodeEQ.
func GroupCode(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldGroupCode, v))
}

// GroupName applies equality check predicate on the "group_name" field. It's identical to GroupNameEQ.
func GroupName(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldGroupName, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldStatus, v))
}

// HumanCodeEQ applies the EQ predicate on the "human_code" field.
func HumanCodeEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldHumanCode, v))
}

// HumanCodeNEQ applies the NEQ predicate on the "human_code" field.
func HumanCodeNEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldHumanCode, v))
}

// HumanCodeIn applies the In predicate on the "human_code" field.
func HumanCodeIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldHumanCode, vs...))
}

// HumanCodeNotIn applies the NotIn predicate on the "human_code" field.
func HumanCodeNotIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldHumanCode, vs...))
}

// HumanCodeGT applies the GT predicate on the "human_code" field.
func HumanCodeGT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldHumanCode, v))
}

// HumanCodeGTE applies the GTE predicate on the "human_code" field.
func HumanCodeGTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldHumanCode, v))
}

// HumanCodeLT applies the LT predicate on the "human_code" field.
func HumanCodeLT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldHumanCode, v))
}

// HumanCodeLTE applies the LTE predicate on the "human_code" field.
func HumanCodeLTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldHumanCode, v))
}

// HumanCodeContains applies the Contains predicate on the "human_code" field.
func HumanCodeContains(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContains(FieldHumanCode, v))
}

// HumanCodeHasPrefix applies the HasPrefix predicate on the "human_code" field.
func HumanCodeHasPrefix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasPrefix(FieldHumanCode, v))
}

// HumanCodeHasSuffix applies the HasSuffix predicate on the "human_code" field.
func HumanCodeHasSuffix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasSuffix(FieldHumanCode, v))
}

// HumanCodeEqualFold applies the EqualFold predicate on the "human_code" field.
func HumanCodeEqualFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEqualFold(FieldHumanCode, v))
}

// HumanCodeContainsFold applies the ContainsFold predicate on the "human_code" field.
func HumanCodeContainsFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContainsFold(FieldHumanCode, v))
}

// HumanNameEQ applies the EQ predicate on the "human_name" field.
func HumanNameEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldHumanName, v))
}

// HumanNameNEQ applies the NEQ predicate on the "human_name" field.
func HumanNameNEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldHumanName, v))
}

// HumanNameIn applies the In predicate on the "human_name" field.
func HumanNameIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldHumanName, vs...))
}

// HumanNameNotIn applies the NotIn predicate on the "human_name" field.
func HumanNameNotIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldHumanName, vs...))
}

// HumanNameGT applies the GT predicate on the "human_name" field.
func HumanNameGT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldHumanName, v))
}

// HumanNameGTE applies the GTE predicate on the "human_name" field.
func HumanNameGTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldHumanName, v))
}

// HumanNameLT applies the LT predicate on the "human_name" field.
func HumanNameLT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldHumanName, v))
}

// HumanNameLTE applies the LTE predicate on the "human_name" field.
func HumanNameLTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldHumanName, v))
}

// HumanNameContains applies the Contains predicate on the "human_name" field.
func HumanNameContains(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContains(FieldHumanName, v))
}

// HumanNameHasPrefix applies the HasPrefix predicate on the "human_name" field.
func HumanNameHasPrefix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasPrefix(FieldHumanName, v))
}

// HumanNameHasSuffix applies the HasSuffix predicate on the "human_name" field.
func HumanNameHasSuffix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasSuffix(FieldHumanName, v))
}

// HumanNameEqualFold applies the EqualFold predicate on the "human_name" field.
func HumanNameEqualFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEqualFold(FieldHumanName, v))
}

// HumanNameContainsFold applies the ContainsFold predicate on the "human_name" field.
func HumanNameContainsFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContainsFold(FieldHumanName, v))
}

// GroupCodeEQ applies the EQ predicate on the "group_code" field.
func GroupCodeEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldGroupCode, v))
}

// GroupCodeNEQ applies the NEQ predicate on the "group_code" field.
func GroupCodeNEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldGroupCode, v))
}

// GroupCodeIn applies the In predicate on the "group_code" field.
func GroupCodeIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldGroupCode, vs...))
}

// GroupCodeNotIn applies the NotIn predicate on the "group_code" field.
func GroupCodeNotIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldGroupCode, vs...))
}

// GroupCodeGT applies the GT predicate on the "group_code" field.
func GroupCodeGT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldGroupCode, v))
}

// GroupCodeGTE applies the GTE predicate on the "group_code" field.
func GroupCodeGTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldGroupCode, v))
}

// GroupCodeLT applies the LT predicate on the "group_code" field.
func GroupCodeLT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldGroupCode, v))
}

// GroupCodeLTE applies the LTE predicate on the "group_code" field.
func GroupCodeLTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldGroupCode, v))
}

// GroupCodeContains applies the Contains predicate on the "group_code" field.
func GroupCodeContains(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContains(FieldGroupCode, v))
}

// GroupCodeHasPrefix applies the HasPrefix predicate on the "group_code" field.
func GroupCodeHasPrefix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasPrefix(FieldGroupCode, v))
}

// GroupCodeHasSuffix applies the HasSuffix predicate on the "group_code" field.
func GroupCodeHasSuffix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasSuffix(FieldGroupCode, v))
}

// GroupCodeEqualFold applies the EqualFold predicate on the "group_code" field.
func GroupCodeEqualFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEqualFold(FieldGroupCode, v))
}

// GroupCodeContainsFold applies the ContainsFold predicate on the "group_code" field.
func GroupCodeContainsFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContainsFold(FieldGroupCode, v))
}

// GroupNameEQ applies the EQ predicate on the "group_name" field.
func GroupNameEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldGroupName, v))
}

// GroupNameNEQ applies the NEQ predicate on the "group_name" field.
func GroupNameNEQ(v string) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldGroupName, v))
}

// GroupNameIn applies the In predicate on the "group_name" field.
func GroupNameIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldGroupName, vs...))
}

// GroupNameNotIn applies the NotIn predicate on the "group_name" field.
func GroupNameNotIn(vs ...string) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldGroupName, vs...))
}

// GroupNameGT applies the GT predicate on the "group_name" field.
func GroupNameGT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldGroupName, v))
}

// GroupNameGTE applies the GTE predicate on the "group_name" field.
func GroupNameGTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldGroupName, v))
}

// GroupNameLT applies the LT predicate on the "group_name" field.
func GroupNameLT(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldGroupName, v))
}

// GroupNameLTE applies the LTE predicate on the "group_name" field.
func GroupNameLTE(v string) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldGroupName, v))
}

// GroupNameContains applies the Contains predicate on the "group_name" field.
func GroupNameContains(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContains(FieldGroupName, v))
}

// GroupNameHasPrefix applies the HasPrefix predicate on the "group_name" field.
func GroupNameHasPrefix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasPrefix(FieldGroupName, v))
}

// GroupNameHasSuffix applies the HasSuffix predicate on the "group_name" field.
func GroupNameHasSuffix(v string) predicate.Hg {
	return predicate.Hg(sql.FieldHasSuffix(FieldGroupName, v))
}

// GroupNameEqualFold applies the EqualFold predicate on the "group_name" field.
func GroupNameEqualFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldEqualFold(FieldGroupName, v))
}

// GroupNameContainsFold applies the ContainsFold predicate on the "group_name" field.
func GroupNameContainsFold(v string) predicate.Hg {
	return predicate.Hg(sql.FieldContainsFold(FieldGroupName, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int) predicate.Hg {
	return predicate.Hg(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int) predicate.Hg {
	return predicate.Hg(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int) predicate.Hg {
	return predicate.Hg(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int) predicate.Hg {
	return predicate.Hg(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int) predicate.Hg {
	return predicate.Hg(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int) predicate.Hg {
	return predicate.Hg(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int) predicate.Hg {
	return predicate.Hg(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int) predicate.Hg {
	return predicate.Hg(sql.FieldLTE(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Hg) predicate.Hg {
	return predicate.Hg(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Hg) predicate.Hg {
	return predicate.Hg(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Hg) predicate.Hg {
	return predicate.Hg(sql.NotPredicates(p))
}
