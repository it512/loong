// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LoongExecColumns holds the columns for the "loong_exec" table.
	LoongExecColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "exec_id", Type: field.TypeString, Unique: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "inst_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "parent_fork_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "fork_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "fork_tag", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "out_tag", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "join_tag", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "gw_type", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "version", Type: field.TypeInt, Default: 0},
	}
	// LoongExecTable holds the schema information for the "loong_exec" table.
	LoongExecTable = &schema.Table{
		Name:       "loong_exec",
		Columns:    LoongExecColumns,
		PrimaryKey: []*schema.Column{LoongExecColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "exec_exec_id",
				Unique:  true,
				Columns: []*schema.Column{LoongExecColumns[1]},
			},
			{
				Name:    "exec_inst_id",
				Unique:  false,
				Columns: []*schema.Column{LoongExecColumns[2]},
			},
			{
				Name:    "exec_status",
				Unique:  false,
				Columns: []*schema.Column{LoongExecColumns[9]},
			},
			{
				Name:    "exec_version",
				Unique:  false,
				Columns: []*schema.Column{LoongExecColumns[10]},
			},
		},
	}
	// LoongInstColumns holds the columns for the "loong_inst" table.
	LoongInstColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "inst_id", Type: field.TypeString, Unique: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "proc_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "busi_key", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "busi_type", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "starter", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "init", Type: field.TypeJSON},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "version", Type: field.TypeInt, Default: 0},
	}
	// LoongInstTable holds the schema information for the "loong_inst" table.
	LoongInstTable = &schema.Table{
		Name:       "loong_inst",
		Columns:    LoongInstColumns,
		PrimaryKey: []*schema.Column{LoongInstColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "inst_inst_id",
				Unique:  true,
				Columns: []*schema.Column{LoongInstColumns[1]},
			},
			{
				Name:    "inst_busi_key",
				Unique:  false,
				Columns: []*schema.Column{LoongInstColumns[3]},
			},
			{
				Name:    "inst_starter",
				Unique:  false,
				Columns: []*schema.Column{LoongInstColumns[5]},
			},
			{
				Name:    "inst_status",
				Unique:  false,
				Columns: []*schema.Column{LoongInstColumns[9]},
			},
			{
				Name:    "inst_version",
				Unique:  false,
				Columns: []*schema.Column{LoongInstColumns[10]},
			},
		},
	}
	// LoongUserTaskColumns holds the columns for the "loong_user_task" table.
	LoongUserTaskColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "task_id", Type: field.TypeString, Unique: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "inst_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "exec_id", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "busi_key", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "busi_type", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "form_key", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "act_id", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "act_name", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "owner", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "assignee", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "candidate_users", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "candidate_groups", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "operator", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "input", Type: field.TypeJSON},
		{Name: "batch_no", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "result", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "version", Type: field.TypeInt, Default: 0},
	}
	// LoongUserTaskTable holds the schema information for the "loong_user_task" table.
	LoongUserTaskTable = &schema.Table{
		Name:       "loong_user_task",
		Columns:    LoongUserTaskColumns,
		PrimaryKey: []*schema.Column{LoongUserTaskColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "usertask_task_id",
				Unique:  true,
				Columns: []*schema.Column{LoongUserTaskColumns[1]},
			},
			{
				Name:    "usertask_assignee",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[10]},
			},
			{
				Name:    "usertask_candidate_groups",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[12]},
			},
			{
				Name:    "usertask_candidate_users",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[11]},
			},
			{
				Name:    "usertask_batch_no",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[15]},
			},
			{
				Name:    "usertask_start_time",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[17]},
			},
			{
				Name:    "usertask_status",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[19]},
			},
			{
				Name:    "usertask_version",
				Unique:  false,
				Columns: []*schema.Column{LoongUserTaskColumns[20]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LoongExecTable,
		LoongInstTable,
		LoongUserTaskTable,
	}
)

func init() {
	LoongExecTable.Annotation = &entsql.Annotation{
		Table: "loong_exec",
	}
	LoongInstTable.Annotation = &entsql.Annotation{
		Table: "loong_inst",
	}
	LoongUserTaskTable.Annotation = &entsql.Annotation{
		Table: "loong_user_task",
	}
}
